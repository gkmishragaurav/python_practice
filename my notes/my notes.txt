checklist -
cybersecurity
AWS
python
problem solving
design discussion

courses/certificates :

https://cognitiveclass.ai/courses/accelerating-deep-learning-gpu/
https://cognitiveclass.ai/courses/reactive-architecture-building-scalable-systems/
https://cognitiveclass.ai/courses/reactive-architecture-cqrs/

all algorithms:
https://github.com/TheAlgorithms/Python

books to read for better python - 
Thinking In Python - this is good for understanding design patterns in python
Addison Wesley - Text processing in python
Beginning Python - From Novice to Professional
Ziade_-_Expert_Python_programming

Q. How python code compiled?
Q. depth of a dictionary in python ?

---------------------------------------------
Python data types:

---------------------------------------------
Recursion and Memory:
Each recursive call makes a new copy of that method (actually only the variables) in memory. Once a method ends (that is, returns some data), the copy of that returning method is removed from memory. The recursive solutions look simple but visualization and tracing takes time.
---------------------------------------------
regular expressions: 
for learning/practice - https://regexone.com/
expert level - http://play.inginf.units.it
	
MetaCharacters

	MetaCharacters - Metacharacters are characters that are interpreted in a special way by a RegEx engine. Here's a list of metacharacters:

	[] . ^ $ * + ? {} () \ |
	[] - any one charecter inside this will be matched.
	[abc] - Here, [abc] will match if the string you are trying to match contains any of the a, b or c.
	[a-e] - is the same as [abcde].
	[1-4] - is the same as [1234].
	[0-39] - is the same as [01239].
	[^abc] means any character except a or b or c.
	[^0-9] means any non-digit character.
	. - Period - A period matches any single character (except newline '\n').
	^ - Caret - used to check if a string starts with a certain character.
	$ - Dollar - used to check if a string ends with a certain character.
	* - Star - matches zero or more occurrences of the pattern left to it.
	+ - Plus - matches one or more occurrences of the pattern left to it.
	? - Question Mark - matches zero or one occurrence of the pattern left to it.
	{} - Braces - Consider this code: {n,m}. This means at least n, and at most m repetitions of the pattern left to it. - a{2,3} - aabc daaaat	2 matches (at [aa]bc and d[aaa]at) - This RegEx [0-9]{2, 4} matches at least 2 digits but not more than 4 digits
	| - Alternation - Vertical bar | is used for alternation (or operator).
	() - Group - Parentheses () is used to group sub-patterns. For example, (a|b|c)xz match any string that matches either a or b or c followed by xz
	\ - Backslash - Backlash \ is used to escape various characters including all metacharacters. For example,

		\$a match if a string contains $ followed by a. Here, $ is not interpreted by a RegEx engine in a special way.

		If you are unsure if a character has special meaning or not, you can put \ in front of it. This makes sure the character is not treated in a special way.
	
Special Sequences:
	\A - Matches if the specified characters are at the start of a string.
		\Athe	the sun	Match
				In the sun	No match

	\b - Matches if the specified characters are at the beginning(\bfoo) or end of a word(foo\b).
	\B - Opposite of \b. Matches if the specified characters are not at the beginning or end of a word.
	\d - Matches any decimal digit. Equivalent to [0-9]
	\D - Matches any non-decimal digit. Equivalent to [^0-9]
	\s - Matches where a string contains any whitespace character. Equivalent to [ \t\n\r\f\v]
	\S - Matches where a string contains any non-whitespace character. Equivalent to [^ \t\n\r\f\v].
	\w - Matches any alphanumeric character (digits and alphabets). Equivalent to [a-zA-Z0-9_]. By the way, underscore _ is also considered an alphanumeric character.
	\W - Matches all the characters marked as letters in the Unicode database provided by the unicodedata module. Equivalent to [^a-zA-Z0-9_]
	\Z - Matches if the specified characters are at the end of a string.

Compilation Flags:
	ASCII, A - Makes several escapes like \w, \b, \s and \d match only on ASCII characters with the respective property.
	DOTALL, S - Make . match any character, including newlines.
	IGNORECASE, I - Do case-insensitive matches.
	LOCALE, L - Do a locale-aware match.
	MULTILINE, M - Multi-line matching, affecting ^ and $.
	VERBOSE, X (for ‘extended’) - Enable verbose REs, which can be organized more cleanly and understandably.

-----------------------------------------------------

Programs to be made:
1. questions around 2d array. - list comprehension, lambda function
2. 
----------------------------------------------------

----------------------------------------------------
CI/CD :
data serialization
making helper/singleton tools - db
----------------------------------------------------

understanding basic server-client architecture code + communication
https://www.bogotobogo.com/python/python_network_programming_server_client_file_transfer.php
how to make a chat server. above link has this implementation too.
sblar - send bind listen
----------------------------------------
Image processing with Python image library Pillow

----------------------------------------
understanding of docker

https://docs.docker.com/compose/compose-file/

Q. When you run docker-compose up, the following happens:

    A network called myapp_default is created.
    A container is created using web’s configuration. It joins the network myapp_default under the name web.
    A container is created using db’s configuration. It joins the network myapp_default under the name db.
	Each container can now look up the hostname web or db and get back the appropriate container’s IP address. For example, web’s application code could connect to the URL postgres://db:5432 and start using the Postgres database.
	
Q. What is Docker Machine?

Docker Machine is a tool that lets you install Docker Engine on virtual hosts, and manage the hosts with docker-machine commands. You can use Machine to create Docker hosts on your local Mac or Windows box, on your company network, in your data center, or on cloud providers like Azure, AWS, or Digital Ocean. Docker Machine enables you to provision multiple remote Docker hosts on various flavors of Linux.

Additionally, Machine allows you to run Docker on older Mac or Windows systems, as described in the previous topic.

Q. Docker Vs VM (Virtual Machine)
	1. VM need more resources, Docker uses less resources.
	2. VM Process isolation is done at hardware level, DM Process Isolation is done at Operating System level
	3. Operating System resources can be shared within Docker, on VM its not.
	4. vm - Booting takes minutes, dm - Booting is done within seconds
	
Q. What is Docker image?

Docker image can be understood as a template from which Docker containers can be created as many as we want out of that single Docker image. Having said that, to put it in layman terms, Docker containers are created out of Docker images. Docker images are created with the build command, and this produces a container that starts when it is run. Docker images are stored in the Docker registry such as the public Docker registry (registry.hub.docker.com) as these are designed to be constituted with layers of other images, enabling just the minimal amount of data over the network.

Q. What is Docker container?

This is a very important question so just make sure you don’t deviate from the topic and I will advise you to follow the below mentioned format:

1. Docker containers include the application and all of its dependencies, but share the kernel with other containers, running as isolated processes in user space on the host operating system. Docker containers are not tied to any specific infrastructure: they run on any computer, on any infrastructure, and in any cloud.
2. Now explain how to create a Docker container, Docker containers can be created by either creating a Docker image and then running it or you can use Docker images that are present on the Dockerhub(in our case it is harbor).
3. Docker containers are basically runtime instances of Docker images.

Q. What is Docker hub?

Docker hub is a cloud-based registry service which allows you to link to code repositories, build your images and test them, stores manually pushed images, and links to Docker cloud so you can deploy images to your hosts. It provides a centralized resource for container image discovery, distribution and change management, user and team collaboration, and workflow automation throughout the development pipeline.

----------------------------------------------
Sorting:
	The selection sort algorithm sorts an array by repeatedly finding the minimum element (considering ascending order) from unsorted part and putting it at the beginning. The algorithm maintains two subarrays in a given array.
	
	Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in wrong order.
	
	Insertion sort is a simple sorting algorithm that works the way we sort playing cards in our hands.
	
----------------------------------------------
Notes: recursion depth
	The precise value of this limit depends upon the Python distribution, but a typical default value is 1000. If this limit is reached, the Python interpreter raises a RuntimeError with a message, maximum recursion depth exceeded .

-----------------------------------------------
Basic hadoop understanding:
https://www.bogotobogo.com/Hadoop/BigData_hadoop_Install_on_ubuntu_single_node_cluster.php
>>>>>>>>>> under stand python map reduce

DataNode:

A DataNode stores data in the [HadoopFileSystem]. A functional filesystem has more than one DataNode, with data replicated across them.

On startup, a DataNode connects to the NameNode; spinning until that service comes up. It then responds to requests from the NameNode for filesystem operations.

DataNode instances can talk to each other, which is what they do when they are replicating data.

NameNode:
	
The NameNode is the centerpiece of an HDFS file system. It keeps the directory tree of all files in the file system, and tracks where across the cluster the file data is kept. It does not store the data of these files itself. 
-----------------------------------------------
What is RPC?

RPC stands for Remote Procedure Call, which utilizes inter-processing communication technology for Windows processes within a network. RPC works on the basis of a client-server communication model, wherein client and server need not always be a different machine. RPC can also be used to set up communication between different processes on a single machine.

Web services are a set of tools that let you build distributed applications on top of existing web infrastructures. These applications use the Web as a kind of "transport layer" but don't offer a direct human interface via the browser. 

XML - RPC - Explained
XML-RPC is among the simplest (and most foolproof) web service approaches, and makes it easy for computers to call procedures on other computers. XML-RPC lets you make function calls across networks. The XML-RPC protocol is a lightweight Remote Procedure Call protocol that uses XML over HTTP to encode its calls. It is often used instead of SOAP for simple client-server exchanges

stateless - 
What makes the protocol stateless is that the server is not required to track state over multiple requests, not that it cannot do so if it wants to. This simplifies the contract between client and server, and in many cases (for instance serving up static data over a CDN) minimizes the amount of data that needs to be transferred. If servers were required to maintain the state of clients' visits the structure of issuing and responding to requests would be more complex. As it is, the simplicity of the model is one of its greatest features. 
HTTP is a stateless protocol, which means that the connection between the browser and the server is lost once the transaction ends.
If protocol HTTP is given as State full protocol,browser window uses single connection to communicate with web server for multiple request given to web application.this gives chance to browser window to engage the connections between browser window and web servers for long time and to keep them in idle state for long time.This may create the situation of reaching to maximum connections of web server even though most of the connections in clients are idle. 
----------------------------------------------
Web services - are responsible for online machine-to-machine communication. 

What is REST

REST is an architectural style, or design pattern, for APIs. It means when a RESTful API is called, the server will transfer to the client a representation of the state of the requested resource.

what is SOAP?

SOAP is an acronym for Simple Object Access Protocol. It is an XML-based messaging protocol for exchanging information among computers. SOAP is an application of the XML specification.

SOAP vs REST:
- As SOAP is an official protocol, it comes with strict rules and advanced security features such as built-in ACID compliance and authorization. Higher complexity, it requires more bandwidth and resources which can lead to slower page load times. 

- REST was created to address the problems of SOAP. Therefore it has a more flexible architecture. It consists of only loose guidelines and lets developers implement the recommendations in their own way. It allows different messaging formats, such as HTML, JSON, XML, and plain text, while SOAP only allows XML. 

-REST is also a more lightweight architecture, so RESTful web services have a better performance. Because of that, it has become incredibly popular in the mobile era where even a few seconds matter a lot (both in page load time and revenue).

----------------------------------------------
lru python/c implementation

LRU cache stand for Least Recently Used Cache. which evict least recently used entry. As Cache purpose is to provide fast and efficient way of retrieving data. it need to meet certain requirement.

Some of the Requirement are

    Fixed Size: Cache needs to have some bounds to limit memory usages.
    Fast Access: Cache Insert and lookup operation should be fast , preferably O(1) time.
    Replacement of Entry : in case , Memory Limit is reached: A cache should have efficient algorithm to evict the entry when memory is full.

Concept:
In case of LRU cache we evict least recently used entry so we have to keep track of recently used entries, entries which have not been used from long time and which have been used recently. plus lookup and insertion operation should be fast enough.

When we think about O(1) lookup , obvious data structure comes in our mind is HashMap. HashMap provide O(1) insertion and lookup. but HashMap does not has mechanism of tracking which entry has been queried recently and which not.

To track this we require another data-structure which provide fast insertion ,deletion and updation , in case of LRU we use Doubly Linkedlist . Reason for choosing doubly LinkList is O(1) deletion , updation and insertion if we have the address of Node on which this operation has to perform.

So our Implementation of LRU cache will have HashMap and Doubly LinkedList. In Which HashMap will hold the keys and address of the Nodes of Doubly LinkedList . And Doubly LinkedList will hold the values of keys.

Implementation:
Design a data structure for LRU Cache. It should support the following operations: get and set.
get(key) – Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.

set(key, value) – Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.

------------------------------------------------
Notes:
Exception handling
1. try: something except abcerror : ptint "Error" else : raise EOFError

What error need to raise is checked under __builtin__ baseexception - if not present there then it will fail. If a new error need to raise add builtin to this  ---- __builtins__.NewnameError = None. If a new error need to make derive it from built in.

2. object oriented python:

It is also valid if he can remove just character at index in the string, and the remaining characters will occur the same number of times. 
-------------------------------------------------------

sql:

1. Write an SQL query to find names of employee start with ‘A’?

SELECT * FROM Employees WHERE EmpName like 'A%' 

2. Delete duplicate data from table only first data remains constant.

DELETE M1 
From managers M1, managers M2 
Where M2.Name = M1.Name AND M1.Id>M2.Id; 

3. Second Highest Salary in MySQL

SELECT MAX(salary) FROM Employee WHERE Salary NOT IN ( SELECT Max(Salary) FROM Employee);
SELECT MAX(Salary) From Employee WHERE Salary < ( SELECT Max(Salary) FROM Employee);

Q. problems with distributed database?
A - 1. performance 2. accessibility 3. data consistency 

sqllite and python: This will make a local database with name 'example.db'

import sqlite3
conn = sqlite3.connect('example.db')
c = conn.cursor()

# Create table
c.execute('''CREATE TABLE stocks
             (date text, trans text, symbol text, qty real, price real)''')

# Insert a row of data
c.execute("INSERT INTO stocks VALUES ('2006-01-05','BUY','RHAT',100,35.14)")

# Save (commit) the changes
conn.commit()

# We can also close the connection if we are done with it.
# Just be sure any changes have been committed or they will be lost.
conn.close()

# For getting data - Do this instead
t = ('RHAT',)
c.execute('SELECT * FROM stocks WHERE symbol=?', t)
print(c.fetchone())

# Larger example that inserts many records at a time
purchases = [('2006-03-28', 'BUY', 'IBM', 1000, 45.00),
             ('2006-04-05', 'BUY', 'MSFT', 1000, 72.00),
             ('2006-04-06', 'SELL', 'IBM', 500, 53.00),
            ]
c.executemany('INSERT INTO stocks VALUES (?,?,?,?,?)', purchases)

------------------------------------------------------

security 

Q. What is the least that you should have on your home network?

A home network is a testing environment for experimentation. You can have an Active Directory Domain Controller, a dedicated firewall appliance, and net-attached toaster. This is the least that you can have on your computer. 

A private key is another large numerical value that is mathematically linked to the public key. In asymmetric cryptography, whatever is encrypted with a public key may only be decrypted by its corresponding private key and vice versa.

Q. Can you explain SSL encryption?

SSL (Secure Socket Layer) enables safe conversation between two or more parties. It is designed to identify and verify the person you are talking to on the other end.

HTTP combined with SSL provides you with a safer browsing experience with encryption. So, you can say it is a tricky question, but SSL wins in terms of security.

Q - Explain encoding, hashing, and encryption?

Encoding: Converts the data in the desired format required for exchange between different systems.
Hashing: Maintains the integrity of a message or data. Any change done could be noticed.
Encryption: Ensures that the data is secured and one needs a digital verification code or image to open or access it.

Q - What is a DDoS attack? How is it mitigated?

DDoS stands for distributed denial of service. So, when a network is flooded with a large number of requests which is not recognized to handle, making the server unavailable to the legitimate requests.

For mitigating a DDoS attack you need to identify normal conditions for network traffics which is necessary for threat detection. DDoS mitigation also requires identifying incoming traffic to separate human traffic from human-like bots and hijacked web browsers.

Q - How to determine the encoding of text?
Correctly detecting the encoding all times is impossible.
You can also use UnicodeDammit.

-------------------------------------------

Machine learning:
usage:
	anomaly detection systems
	sequencing events - predicting new event
	recommondation systems

AI vs Machine learning:
	mimic cognitive functions of human
	machine learning - learn from problems to solve problems.

python libraries:
numpy
scipy
matplotlib
pandas
scikit

Learning problems fall into a few categories:
1. supervised learning, in which the data comes with additional attributes that we want to predict. This problem can be either:

	1. classification: samples belong to two or more classes and we want to learn from already labeled data how to predict the class of unlabeled data.
	2. regression: if the desired output consists of one or more continuous variables, then the task is called regression.
		
2. unsupervised learning, in which the training data consists of a set of input vectors x without any corresponding target values.
	Clustering - Clustering is considered to be one of the most popular unsupervised machine learning
techniques used for grouping data points or objects that are somehow similar.


---------------------------------------------------
Architecture details:
Basically whole architecture is master-node.

1. UI part called Cportal - admin portal: mix sportal in this only.
	it is made of cherrypy, cherrypy is single thread so this part is also that. its light weight. mostly manual intervention is expected to be less , that is why this part is kept as light as this.

2. Haproxy + Loadbancer - to direct data to multiple cloudmaster.

3. Cloudmaster - Multiple cloudmasters are possible. Customerids are mapped with cloudmaster (stateful). this communication is RPC. (this is changed to REST for new cloudapps.). for REST we use gunicorn rest servers. - this is multi thread unlike cherypy. config server is only one talk to configDB. on every CM, it has db-cache for coresponding customer/devices. This cache is implemented my SQLobject cache in python. 

4. Communication of CPortal with Cloudmaster - Logged-in on CPortal - Session maintained with CS.  once something reached to master, - license check, cluster check, storage.

5. CS also has 2 more task. session management and task management. in session it keeps the info for node.

6. Node - it is a form of cluster. every cluster has many nodes. one master is there for all of them . if want to add a node, its information should be add in session.every node has worker on it.

7. Worker - Client + agent + storage - every node has 64 workers max. every worker can run 1 backup. 

8. worker process - metadata - dynamodb(FS) - while real content is on S3 in form of blocks.

9. Dynamodb - Qset- userinfo(Uid)/ Cset - deviceinfo(DID) / Fset(snapshot)

10. S3 - Blocks for writting data with notification of cver and dver.
at first block cver - 16, dver = infinte
at 2 block cver - 16, dver = infinte
goes on
if 2nd block change 
at 2 block cver - 16, dver = 17
at 2 block cver - 17, dver = infinte

Dedupe works on these lines.

11. Backup/restore workflow.
	
12. how stateless REST server is going to replace stateful RPC. how to solve state related problems. for DBcache - a cache is implemented before db and every master will go through it. for task and session management - a houston service is implemented. 

-------------------------------------------------------------
API automation suit details:
1. testrunner.py - server client 
	Logger 
	Testsuit
	testcase
	config
	resdef/resman
	testmodules - lib 
	cache in testrunner - between testcase information - trcache
	result management
	reports
	send mail
	
resman - host - server/client - servermethod - RPC/REST - data serialize and dselialize. 
apibase - POST/GET - Third party - 
sirialise data 
validations
tools 
zip read/writer 
log analyzer
file handler - large file read
hash creater
data generator - random string, number, date/ time
csv reader
json handler 
xml parser
eml parser
firstbackup/incremental backup 
fsutils
os-based
database connector 
RPC server/client
sending email 
generate report
sending mail
sub-process - fire cmd on diff machine.

------------------------------------------

git commands:

git config –global user.name "gkmishragaurav"
git config –global user.email "gkmishragaurav@gmail.com"
git init demo
git clone <url>
git add [file]
git add *
git commit -m "[ Type in the commit message]"

-----------------------------------------------------------------

#curl http://wttr.in/pune
echo "Welcome, Gaurav"
alias dm='docker-machine'
alias dc='docker-compose'
alias d='docker'
alias settag='export TAG=`cat TAG`'
alias seteval='eval $(docker-machine env default)'
alias de='docker exec -it'
alias trunk='cd C:/Users/gaurav/trunk'
alias compose='trunk && cd contrib/docker-compose'
alias dockerup='compose && settag && seteval && dc up'
alias dockersetup="cd contrib/docker-compose && settag && seteval && dc up -d"
alias winpm="winpty docker exec -it master bash"
alias winpn="winpty docker exec -it node bash"



-----------------------------------------------------------
what is diff b/w text file and binary file?

-----------------------------------------------------------

what is hashing?
	- assosiative array
	- indexed with other ways like 'string'
	- used to retrive information quickly.
	- serch - worst case -- O(n), best case -- O(1)
	- 4 key component --- Hash table, Hash Function, collisions, collision resolution Techniques
	
Hashing:
Hashing is a technique to convert a range of key values into a range of indexes of an array. We're going to use modulo operator to get a range of key values. 

Hash Table/Hash map:
Hash table is a generalization of array. with an array, we store the element whose key k at a position k of the array. that means , given a key k, we find the element whose key by just looking in the kth position of the array. This is called direct addressing. Direct addressing is applicable when we can afford to allocate an array with one position for every possible key. but if we do not have enough space to allocate then this will not work. (means need to come up with nother idea.)	

Charecterstics of good hash function:
	- Minimize collision
	- Be easy and quick to compares
	- Distribute key values evenly in the hash table
	- have a high load factor for given set of keys
	
load factor = no of element in the hash table/hash table size.

Collision resolution techniques:
	- separate chaining --- in hash table all same keys will be at same spot in LL form.this called clustering.
	- open addressing
		- linear proabing 
		- quadratic probing
		- double hashing - interval b/w the probes is calculated by another hash function.

Linear Probing
As we can see, it may happen that the hashing technique is used to create an already used index of the array. In such a case, we can search the next empty location in the array by looking into the next cell until we find an empty cell. This technique is called linear probing.

Search Operation
Whenever an element is to be searched, compute the hash code of the key passed and locate the element using that hash code as index in the array. Use linear probing to get the element ahead if the element is not found at the computed hash code.

Insert Operation
Whenever an element is to be inserted, compute the hash code of the key passed and locate the index using that hash code as an index in the array. Use linear probing for empty location, if an element is found at the computed hash code.

Delete Operation
Whenever an element is to be deleted, compute the hash code of the key passed and locate the index using that hash code as an index in the array. Use linear probing to get the element ahead if an element is not found at the computed hash code. When found, store a dummy item there to keep the performance of the hash table intact.
-------------------------------------

websocket vs long polling ---- https://dev.to/moz5691/websocket-vs-long-polling-http-412f

-----------------------------------------------
- ASCII Charecters understanding:

-----------------------------------------------




